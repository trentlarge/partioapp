{"version":3,"sources":["meteor://ðŸ’»app/server/accountCreation.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,CAAC,YAAY,CAAC,UAAS,OAAO,EAAC,IAAI,EAAE;AAC5C,QAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;AACrD,QAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC9C,KAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC;;AAE5B,KAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;AAC3B,MAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;AACzC,MAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE3F,MAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;AACrC,MAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;AAClD,MAAI,CAAC,OAAO,CAAC,MAAM,GAAG,4BAA4B,GAAC,MAAM,GAAC,qBAAqB,CAAC;AAChF,MAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI;;;AAG/C,MAAI,CAAC,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,MAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;;AAEzB,MAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;AAChD,MAAI,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,UAAU,IAAI,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,aAAa,EAAE;AAC9F,OAAI,CAAC,MAAM,GAAG,CAAC,EAAC,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,KAAK,EAAC,CAAC;AAC5D,SAAM,CAAC,UAAU,CAAC,YAAW;AAC5B,YAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;GACb;;AAED,SAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;AAClD,SAAO,IAAI,CAAC;EAEZ,MAAM;AACN,MAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;AACrC,MAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;AAC5C,MAAI,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC;AACpD,MAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC;;AAEtD,MAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC;;;;;;;;;AAShD,SAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;;AAEhD,QAAM,CAAC,UAAU,CAAC,YAAW;AAC5B,WAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACzC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;;AAEb,SAAO,IAAI,CAAC;EACZ;CAED,CAAC,CAAC","file":"/server/accountCreation.js","sourcesContent":["Accounts.onCreateUser(function(options,user) {\n\tconsole.log(\"OPTIONS-->>\" + JSON.stringify(options));\n\tconsole.log(\"USER-->>\" + JSON.stringify(user))\n\tvar meteorUserId = user._id;\n\n\tif (user.services.facebook) {\n\t\tvar fbLink = user.services.facebook.link;\n\t\tvar linkId = fbLink.split(\"https://www.facebook.com/app_scoped_user_id/\")[1].split(\"/\")[0];\n\t\t\n\t\tuser.profile = options.profile || {};\n\t\tuser.profile.email = user.services.facebook.email;\n\t\tuser.profile.avatar = 'http://graph.facebook.com/'+linkId+'/picture?type=large';\n\t\tuser.profile.name = user.services.facebook.name\n\t\t//FOR NO APPARENT REASON FACEBOOK REFUSED TO SEND AVATAR AFTER LOGIN\n\t\t// user.profile.avatar = options.profile.avatar;\n\t\tuser.profile.college = '';\n\t\tuser.profile.mobile = '';\n\n\t\tvar currentEmail = user.services.facebook.email;\n\t\tif (currentEmail.split(\"@\")[1] === \"duke.edu\" || currentEmail.split(\"@\")[1] === \"rollins.edu\") {\n\t\t\tuser.emails = [{\"address\": currentEmail, \"verified\": false}]\n\t\t\tMeteor.setTimeout(function() {\n\t\t\t\tAccounts.sendVerificationEmail(user._id);\n\t\t\t}, 4 * 1000);\n\t\t}\n\t\t\n\t\tconsole.log('finished FACEBOOK user creation...');\n\t\treturn user;\n\n\t} else {\n\t\tuser.profile = options.profile || {};\t\n\t\tuser.profile.email = user.emails[0].address;\n\t\tuser.profile.avatar = options.profileDetails.avatar;\n\t\tuser.profile.college = options.profileDetails.college;\n\t\t// user.profile.mobile = options.profileDetails.mobile;\n\t\tuser.profile.name = options.profileDetails.name;\n\t\t//NOT TAKING LOCATION DETAILS ON REGISTRATION ANYMORE\n\t\t// user.profile.address = options.profileDetails.location ? options.profileDetails.location.address : \"-\" ;\n\t\t// user.profile.latLong = options.profileDetails.location ? options.profileDetails.location.latLong : \"-\";\n\n\t\t// Notifications.insert({\n\t\t// \tuserId: meteorUserId,\n\t\t// \talerts: []\n\t\t// })\n\t\tconsole.log('finished MANUAL user creation...');\n\n\t\tMeteor.setTimeout(function() {\n\t\t\tAccounts.sendVerificationEmail(user._id);\n\t\t}, 4 * 1000);\n\n\t\treturn user;\n\t}\n\t\n});\n\n// Accounts.validateLoginAttempt(function(attempt){\n//   if (attempt.user && attempt.user.emails && !attempt.user.emails[0].verified ) {\n//     console.log('email not verified');\n\n//     return false; // the login is aborted\n//   }\n//   return true;\n// });\n\n"]}
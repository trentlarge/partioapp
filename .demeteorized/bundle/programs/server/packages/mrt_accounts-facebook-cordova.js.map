{"version":3,"sources":["meteor://ðŸ’»app/packages/mrt_accounts-facebook-cordova/packages/mrt_accounts-facebook-cordova.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mH","file":"/packages/mrt_accounts-facebook-cordova.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/mrt:accounts-facebook-cordova/facebook_server.js                                           //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nAccounts.registerLoginHandler(function(loginRequest) {                                                 // 1\n  if(!loginRequest.cordova) {                                                                          // 2\n    return undefined;                                                                                  // 3\n  }                                                                                                    // 4\n                                                                                                       // 5\n  loginRequest = loginRequest.authResponse;                                                            // 6\n  var identity = getIdentity(loginRequest.accessToken);                                                // 7\n  var profilePicture = getProfilePicture(loginRequest.accessToken);                                    // 8\n                                                                                                       // 9\n  console.log(profilePicture);                                                                         // 10\n                                                                                                       // 11\n  var serviceData = {                                                                                  // 12\n    accessToken: loginRequest.accessToken,                                                             // 13\n    expiresAt: (+new Date) + (1000 * loginRequest.expiresIn)                                           // 14\n  };                                                                                                   // 15\n                                                                                                       // 16\n  var whitelisted = ['id', 'email', 'name', 'first_name',                                              // 17\n      'last_name', 'link', 'username', 'gender', 'locale', 'age_range'];                               // 18\n                                                                                                       // 19\n  var fields = _.pick(identity, whitelisted);                                                          // 20\n  _.extend(serviceData, fields);                                                                       // 21\n                                                                                                       // 22\n  var options = {profile: {}};                                                                         // 23\n  var profileFields = _.pick(identity, Meteor.settings.public.facebook.profileFields);                 // 24\n  _.extend(options.profile, profileFields);                                                            // 25\n                                                                                                       // 26\n  options.profile.avatar = profilePicture;                                                             // 27\n                                                                                                       // 28\n  return Accounts.updateOrCreateUserFromExternalService(\"facebook\", serviceData, options);             // 29\n                                                                                                       // 30\n});                                                                                                    // 31\n                                                                                                       // 32\nvar getIdentity = function (accessToken) {                                                             // 33\n  try {                                                                                                // 34\n    return HTTP.get(\"https://graph.facebook.com/me\", {                                                 // 35\n      params: {access_token: accessToken}}).data;                                                      // 36\n  } catch (err) {                                                                                      // 37\n    throw _.extend(new Error(\"Failed to fetch identity from Facebook. \" + err.message),                // 38\n                   {response: err.response});                                                          // 39\n  }                                                                                                    // 40\n};                                                                                                     // 41\n                                                                                                       // 42\nvar getProfilePicture = function (accessToken) {                                                       // 43\n  try {                                                                                                // 44\n    return HTTP.get(\"https://graph.facebook.com/v2.0/me/picture/?redirect=false\", {                    // 45\n      params: {access_token: accessToken}}).data.data.url;                                             // 46\n  } catch (err) {                                                                                      // 47\n    throw _.extend(new Error(\"Failed to fetch identity from Facebook. \" + err.message),                // 48\n                   {response: err.response});                                                          // 49\n  }                                                                                                    // 50\n};                                                                                                     // 51\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/mrt:accounts-facebook-cordova/facebook.js                                                  //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nAccounts.oauth.registerService('facebook');                                                            // 1\n                                                                                                       // 2\nif (Meteor.isClient) {                                                                                 // 3\n                                                                                                       // 4\n  Meteor.loginWithFacebook = function(options, callback) {                                             // 5\n    // support a callback without options                                                              // 6\n    if (! callback && typeof options === \"function\") {                                                 // 7\n      callback = options;                                                                              // 8\n      options = null;                                                                                  // 9\n    }                                                                                                  // 10\n                                                                                                       // 11\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback); // 12\n                                                                                                       // 13\n    var fbLoginSuccess = function (data) {                                                             // 14\n      data.cordova = true;                                                                             // 15\n                                                                                                       // 16\n      Accounts.callLoginMethod({                                                                       // 17\n        methodArguments: [data],                                                                       // 18\n        userCallback: callback                                                                         // 19\n      });                                                                                              // 20\n    }                                                                                                  // 21\n                                                                                                       // 22\n    if (typeof facebookConnectPlugin != \"undefined\" && Meteor.settings) {                              // 23\n      facebookConnectPlugin.getLoginStatus(                                                            // 24\n        function (response) {                                                                          // 25\n          if (response.status != \"connected\") {                                                        // 26\n            facebookConnectPlugin.login(Meteor.settings.public.facebook.permissions,                   // 27\n                fbLoginSuccess,                                                                        // 28\n                function (error) { console.log(\"\" + error) }                                           // 29\n            );                                                                                         // 30\n          } else {                                                                                     // 31\n            fbLoginSuccess(response);                                                                  // 32\n          }                                                                                            // 33\n        },                                                                                             // 34\n        function (error) { console.log(\"\" + error) }                                                   // 35\n      );                                                                                               // 36\n    } else {                                                                                           // 37\n      Facebook.requestCredential(options, credentialRequestCompleteCallback);                          // 38\n    }                                                                                                  // 39\n  };                                                                                                   // 40\n                                                                                                       // 41\n} else {                                                                                               // 42\n                                                                                                       // 43\n  if (Meteor.settings &&                                                                               // 44\n      Meteor.settings.facebook &&                                                                      // 45\n      Meteor.settings.facebook.appId &&                                                                // 46\n      Meteor.settings.facebook.secret) {                                                               // 47\n                                                                                                       // 48\n    ServiceConfiguration.configurations.remove({                                                       // 49\n      service: \"facebook\"                                                                              // 50\n    });                                                                                                // 51\n                                                                                                       // 52\n    ServiceConfiguration.configurations.insert({                                                       // 53\n      service: \"facebook\",                                                                             // 54\n      appId: Meteor.settings.facebook.appId,                                                           // 55\n      secret: Meteor.settings.facebook.secret                                                          // 56\n    });                                                                                                // 57\n                                                                                                       // 58\n    Accounts.addAutopublishFields({                                                                    // 59\n      // publish all fields including access token, which can legitimately                             // 60\n      // be used from the client (if transmitted over ssl or on                                        // 61\n      // localhost). https://developers.facebook.com/docs/concepts/login/access-tokens-and-types/,     // 62\n      // \"Sharing of Access Tokens\"                                                                    // 63\n      forLoggedInUser: ['services.facebook'],                                                          // 64\n      forOtherUsers: [                                                                                 // 65\n        // https://www.facebook.com/help/167709519956542                                               // 66\n        'services.facebook.id', 'services.facebook.username', 'services.facebook.gender'               // 67\n      ]                                                                                                // 68\n    });                                                                                                // 69\n                                                                                                       // 70\n  } else {                                                                                             // 71\n    console.log(\"Meteor settings for accounts-facebook-cordova not configured correctly.\")             // 72\n  }                                                                                                    // 73\n}                                                                                                      // 74\n                                                                                                       // 75\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}
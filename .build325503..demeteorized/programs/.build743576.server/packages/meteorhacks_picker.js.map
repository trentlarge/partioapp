{"version":3,"sources":["meteorhacks:picker/lib/implementation.js","meteorhacks:picker/lib/instance.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,iD;AACA,kC;AACA,wC;;AAEA,sC;AACA,uC;AACA,mB;AACA,uB;AACA,wB;AACA,C;;AAEA,qD;AACA,kC;AACA,E;;AAEA,sD;AACA,kC;AACA,6B;AACA,2B;AACA,c;AACA,E;;AAEA,iD;AACA,0C;AACA,kC;AACA,mB;AACA,E;;AAEA,4D;AACA,kB;AACA,uB;AACA,2B;AACA,4B;;AAEA,2B;AACA,+C;AACA,iB;AACA,sB;AACA,K;AACA,G;;AAEA,0B;AACA,qC;AACA,2D;AACA,oB;AACA,2E;AACA,Y;AACA,yB;AACA,K;AACA,G;;AAEA,gC;AACA,4C;AACA,e;AACA,4C;AACA,+B;AACA,a;AACA,sD;AACA,qD;AACA,+E;AACA,c;AACA,2B;AACA,O;AACA,Y;AACA,6B;AACA,M;AACA,G;;AAEA,oC;AACA,wD;AACA,mB;AACA,0D;AACA,Y;AACA,e;AACA,K;AACA,G;AACA,E;;AAEA,sD;AACA,kB;AACA,oC;AACA,8B;AACA,sB;AACA,wB;AACA,G;;AAEA,gB;AACA,E;;AAEA,gF;AACA,qB;AACA,a;AACA,U;AACA,4B;AACA,G;;AAEA,sB;AACA,iD;AACA,G;AACA,E;;AAEA,+E;AACA,qB;AACA,a;AACA,U;AACA,4B;AACA,G;;AAEA,qB;AACA,0C;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;AC/GA,yB;AACA,wD;AACA,mC;AACA,G","file":"/packages/meteorhacks_picker.js","sourcesContent":["var pathToRegexp = Npm.require('path-to-regexp');\nvar Fiber = Npm.require('fibers');\nvar urlParse = Npm.require('url').parse;\n\nPickerImp = function(filterFunction) {\n  this.filterFunction = filterFunction;\n  this.routes = [];\n  this.subRouters = [];\n  this.middlewares = [];\n}\n\nPickerImp.prototype.middleware = function(callback) {\n  this.middlewares.push(callback);\n};\n\nPickerImp.prototype.route = function(path, callback) {\n  var regExp = pathToRegexp(path);\n  regExp.callback = callback;\n  this.routes.push(regExp);\n  return this;\n};\n\nPickerImp.prototype.filter = function(callback) {\n  var subRouter = new PickerImp(callback);\n  this.subRouters.push(subRouter);\n  return subRouter;\n};\n\nPickerImp.prototype._dispatch = function(req, res, bypass) {\n  var self = this;\n  var currentRoute = 0;\n  var currentSubRouter = 0;\n  var currentMiddleware = 0;\n\n  if(this.filterFunction) {\n    var result = this.filterFunction(req, res);\n    if(!result) {\n      return bypass();\n    }\n  }\n\n  processNextMiddleware();\n  function processNextMiddleware () {\n    var middleware = self.middlewares[currentMiddleware++];\n    if(middleware) {\n      self._processMiddleware(middleware, req, res, processNextMiddleware);\n    } else {\n      processNextRoute();\n    }\n  }\n\n  function processNextRoute () {\n    var route = self.routes[currentRoute++];\n    if(route) {\n      var uri = req.url.replace(/\\?.*/, '');\n      var m = uri.match(route);\n      if(m) {\n        var params = self._buildParams(route.keys, m);\n        params.query = urlParse(req.url, true).query;\n        self._processRoute(route.callback, params, req, res, processNextRoute);\n      } else {\n        processNextRoute();\n      }\n    } else {\n      processNextSubRouter();\n    } \n  }\n\n  function processNextSubRouter () {\n    var subRouter = self.subRouters[currentSubRouter++];\n    if(subRouter) {\n      subRouter._dispatch(req, res, processNextSubRouter);\n    } else {\n      bypass();\n    }\n  }\n};\n\nPickerImp.prototype._buildParams = function(keys, m) {\n  var params = {};\n  for(var lc=1; lc<m.length; lc++) {\n    var key = keys[lc-1].name;\n    var value = m[lc];\n    params[key] = value;\n  }\n\n  return params;\n};\n\nPickerImp.prototype._processRoute = function(callback, params, req, res, next) {\n  if(Fiber.current) {\n    doCall();\n  } else {\n    new Fiber(doCall).run();\n  }\n\n  function doCall () {\n    callback.call(null, params, req, res, next); \n  }\n};\n\nPickerImp.prototype._processMiddleware = function(middleware, req, res, next) {\n  if(Fiber.current) {\n    doCall();\n  } else {\n    new Fiber(doCall).run();\n  }\n\n  function doCall() {\n    middleware.call(null, req, res, next);\n  }\n};","Picker = new PickerImp();\nWebApp.rawConnectHandlers.use(function(req, res, next) {\n  Picker._dispatch(req, res, next);\n});\n"]}